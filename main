let board = [
  ['','','',''],
  ['','','',''],
  ['','','',''],
  ['','','',''],
];

let gridSize;
let numberOfSpots;
let offset;

let mousePos = [0, 0];
let available = [];
let turn = true; //X

function setup() {
  createCanvas(800, 800);
  
  numberOfSpots = 3;
  gridSize = width/numberOfSpots;
  offset = gridSize/4;
  
  player1 = new Player('X');
  player2 = new Player('O');
}

function draw() {
  background(220);
  strokeWeight(2);
  
  available = [];
  

  for (i = 0; i < numberOfSpots; i++) {
    for (j = 0; j < numberOfSpots; j++) {
      //draw grid and characters from board
      line(i * gridSize, j, i * gridSize, j + gridSize*numberOfSpots);
      line(i, j * gridSize, i + gridSize*numberOfSpots, j * gridSize);
      
      //check available spots
      if (board[i][j] == '') {
        available.push([i, j]);
      }
      
      //draw X's and O's
      textSize(gridSize/1.5);
      text(board[i][j], i*gridSize + offset, j*gridSize + gridSize - offset);
    }
  }
  
  //get position of mouse on grid
  mousePos = [floor(mouseX/gridSize), floor(mouseY/gridSize)];
  
  textSize(30);
  text(mousePos[0], width - 200, height - 50);
  text(mousePos[1], width - 75, height - 50);
}

function mouseClicked() {
  if (turn) {
    player1.play(mousePos[0], mousePos[1]);
    turn = false;
  } else {
    player2.play(mousePos[0], mousePos[1]);
    turn = true;
  }
}

class Player {
  constructor(cha) {
    this.character = cha;
  }
  
  play(posX, posY) {
    print(available[1]);
    print(posX, posY);
    
    if (!([posX, posY] in available)) {
      board[posX][posY] = this.character;
    } else {
      print('you cant play here');
    }
  }
}
















